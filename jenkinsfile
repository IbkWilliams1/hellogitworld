pipeline {
    agent any

    environment {
        AWS_ACCOUNT_ID = credentials('AWS_ACCOUNT_ID') // Stored in Jenkins Credentials
        AWS_REGION = credentials('AWS_REGION') // Stored in Jenkins Credentials
        ECR_REPO_NAME = credentials('ECR_REPO_NAME') // Stored in Jenkins Credentials
        IMAGE_TAG = "latest" // Modify if versioning is needed
        IMAGE_NAME = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPO_NAME}:${IMAGE_TAG}"
    }

    stages {
        stage('Checkout Code') {
            steps {
                git 'https://github.com/IbkWilliams1/hellogitworld.git'
            }
        }

        stage('Login to AWS ECR') {
            steps {
                script {
                    withCredentials([
                        string(credentialsId: 'AWS_ACCESS_KEY_ID', variable: 'AWS_ACCESS_KEY_ID'),
                        string(credentialsId: 'AWS_SECRET_ACCESS_KEY', variable: 'AWS_SECRET_ACCESS_KEY')
                    ]) {
                        sh """
                            aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
                            aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
                            aws configure set region $AWS_REGION
                            aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com
                        """
                    }
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                sh "docker build -t ${IMAGE_NAME} ."
            }
        }

        stage('Push Image to ECR') {
            steps {
                sh "docker push ${IMAGE_NAME}"
            }
        }

        stage('Clean Up') {
            steps {
                sh "docker rmi ${IMAGE_NAME}"
            }
        }
    }

    post {
        success {
            echo "Docker image successfully built and pushed to ECR."
        }
        failure {
            echo "Build failed. Check logs for errors."
        }
    }
}